#extension GL_NV_compute_shader_derivatives : require 
#include "BakeReflectionMap.h"
#include "Compute.glsl"
#include "SG.h"
#include "Texture.glsl"

LOCAL_SIZE_2D(16, 16);
layout(derivative_group_linearNV) in;
void main() {
  const uvec2 pos = linear_to_global_2d(gl_WorkGroupID, gl_WorkGroupSize, gl_LocalInvocationIndex);
  const uint face = gl_GlobalInvocationID.z;

  vec3 r = cube_map_face_pos_to_direction(pos, face, image_size(pc.reflectance_map));
  vec2 uv = direction_to_equirectangular_uv(r);
  vec3 luminance = texture(pc.equirectangular_map, uv).rgb;
  
  image_store(pc.reflectance_map, ivec3(pos, face), vec4(luminance, 1.0f));
}
